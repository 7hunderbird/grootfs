// This file was generated by counterfeiter
package storefakes

import (
	"sync"

	"code.cloudfoundry.org/grootfs/store"
	"code.cloudfoundry.org/lager"
)

type FakeBundleRootFSDestroyer struct {
	DestroyStub        func(logger lager.Logger, fullPath string) error
	destroyMutex       sync.RWMutex
	destroyArgsForCall []struct {
		logger   lager.Logger
		fullPath string
	}
	destroyReturns struct {
		result1 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeBundleRootFSDestroyer) Destroy(logger lager.Logger, fullPath string) error {
	fake.destroyMutex.Lock()
	fake.destroyArgsForCall = append(fake.destroyArgsForCall, struct {
		logger   lager.Logger
		fullPath string
	}{logger, fullPath})
	fake.recordInvocation("Destroy", []interface{}{logger, fullPath})
	fake.destroyMutex.Unlock()
	if fake.DestroyStub != nil {
		return fake.DestroyStub(logger, fullPath)
	} else {
		return fake.destroyReturns.result1
	}
}

func (fake *FakeBundleRootFSDestroyer) DestroyCallCount() int {
	fake.destroyMutex.RLock()
	defer fake.destroyMutex.RUnlock()
	return len(fake.destroyArgsForCall)
}

func (fake *FakeBundleRootFSDestroyer) DestroyArgsForCall(i int) (lager.Logger, string) {
	fake.destroyMutex.RLock()
	defer fake.destroyMutex.RUnlock()
	return fake.destroyArgsForCall[i].logger, fake.destroyArgsForCall[i].fullPath
}

func (fake *FakeBundleRootFSDestroyer) DestroyReturns(result1 error) {
	fake.DestroyStub = nil
	fake.destroyReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeBundleRootFSDestroyer) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.destroyMutex.RLock()
	defer fake.destroyMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeBundleRootFSDestroyer) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ store.BundleRootFSDestroyer = new(FakeBundleRootFSDestroyer)
